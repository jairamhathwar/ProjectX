<launch>
    <!-- Camera Model and Name -->
    <arg name="camera_name"           default="zed2" /> <!-- The name you want -->
    <arg name="camera_model"          default="zed2" /> <!-- 'zed' or 'zedm' or 'zed2' -->
    <arg name="zed_nodelet_name"      default="zed_node" />

    <!-- Load SVO file -->
    <arg name="svo_file"              default="" /><!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <!-- Remote stream -->
    <arg name="stream"                default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <!-- Base frame -->
    <arg name="base_frame"            default="base_link" />

    <!-- Publish ZED urdf -->
    <arg name="publish_urdf"          default="true" />

    <arg name="camera_id"             default="0" />
    <arg name="gpu_id"                default="-1" />

    <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_x"             default="0.0" />
    <arg name="cam_pos_y"             default="0.0" />
    <arg name="cam_pos_z"             default="0.0" />

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" />
    <arg name="cam_pitch"             default="0.0" />
    <arg name="cam_yaw"               default="0.0" />

    <!-- Name of the Nodelet Manager -->
    <arg name="nodelet_manager_name"  default="$(arg camera_name)_nodelet_manager" />

    <group ns="$(arg camera_name)">
        <!-- Nodelet Manager -->
        <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"  args="manager" output="screen" />

        <!-- Load ZED wrapper nodelet -->
        <include file="$(find zed_wrapper)/launch/include/zed_camera_nodelet.launch">
            <arg name="nodelet_manager_name"            value="$(arg nodelet_manager_name)" />
            <arg name="camera_name"                     value="$(arg camera_name)" />
            <arg name="svo_file"                        value="$(arg svo_file)" />
            <arg name="stream"                          value="$(arg stream)" />
            <arg name="node_name"                       value="$(arg zed_nodelet_name)" />
            <arg name="camera_model"                    value="$(arg camera_model)" />
            <arg name="base_frame"                      value="$(arg base_frame)" />
            <arg name="publish_urdf"                    value="$(arg publish_urdf)" />
            <arg name="cam_pos_x"                       value="$(arg cam_pos_x)" />
            <arg name="cam_pos_y"                       value="$(arg cam_pos_y)" />
            <arg name="cam_pos_z"                       value="$(arg cam_pos_z)" />
            <arg name="cam_roll"                        value="$(arg cam_roll)" />
            <arg name="cam_pitch"                       value="$(arg cam_pitch)" />
            <arg name="cam_yaw"                         value="$(arg cam_yaw)" />
        </include>

        <!-- Virtual laser scan as nodelet -->
        <!-- "$ sudo apt install ros-kinetic-depthimage-to-laserscan" -->
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg nodelet_manager_name)">
            <param name="scan_height" value="10"/>
            <param name="output_frame_id" value="camera_link"/>
            <param name="range_min" value="0.1"/>
            <remap from="image" to="$(arg zed_nodelet_name)/depth/depth_registered"/>
            <remap from="scan" to="/scan"/>
        </node>
    </group>

    <node pkg="tf" type="static_transform_publisher" name="base_to_laser"
        args="0 0 0 0 0 0 1 base_link camera_link 100" />

    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
        <param name="map_udpate_interval" value="5.0"/>
        <param name="delta" value="0.02"/>
        <param name="base_frame" value="$(arg base_frame)"/>
        <param name="odom_frame" value="odom"/>
    </node>
</launch>